---
import Layout from "../layouts/Layout.astro";
import { db, Usuario } from "astro:db"; // Importa la base de datos y el modelo de usuario
import {
    mayor_16,
    Contraseña_valida,
    numero_telf_valido,
} from "../scripts/VerificacionDatos/VerificacionDatos.js"; // Importa funciones de validación

const fecha_actual = new Date(); // Obtiene la fecha actual
let errores = []; // Array para almacenar errores de validación

// Verificación en el servidor: Obtiene los correos electrónicos ya registrados en la base de datos
const correos_registrados = await db
    .select({
        correo_electronico: Usuario.correo_electronico,
    })
    .from(Usuario);

// Verificación en el servidor: Obtiene los nombres de usuario ya registrados en la base de datos
const nombres_usu_registrados = await db
    .select({
        nombre_usuario: Usuario.nombre_usuario,
    })
    .from(Usuario);

// Verificación en el servidor: Comprueba si el método de la solicitud es POST (envío del formulario)
if (Astro.request.method === "POST") {
    const datosformulario = await Astro.request.formData();
    const nombre_usuario = datosformulario.get("nombre_usuario");
    const nombre = datosformulario.get("nombre");
    const apellidos = datosformulario.get("apellidos");
    const contraseña = datosformulario.get("contraseña");
    const correo_electronico = datosformulario.get("correo_electronico");
    const direccion_usu = datosformulario.get("direccion_usu");
    const telefono_usu = datosformulario.get("telefono_usu");
    const fechanacimientotexto = datosformulario.get("fecha_nacimiento");
    const tipousuariotexto = datosformulario.get("tipo_usu");

    // Verificación en el servidor: Comprueba que todos los datos del formulario sean cadenas de texto
    if (
        typeof nombre_usuario === "string" &&
        typeof nombre === "string" &&
        typeof apellidos === "string" &&
        typeof contraseña === "string" &&
        typeof correo_electronico === "string" &&
        typeof direccion_usu === "string" &&
        typeof telefono_usu === "string" &&
        typeof fechanacimientotexto === "string" &&
        typeof tipousuariotexto === "string"
    ) {
        const fecha_nacimiento = new Date(fechanacimientotexto); // Convierte la fecha de nacimiento a un objeto Date

        // Verificación en el servidor: Validar si el usuario es mayor de 16 años
        if (!mayor_16(fecha_nacimiento)) {
            errores.push("Debes tener 16 años o más para poder registrarte.");
        }

        // Verificación en el servidor: Validar si la contraseña cumple con los requisitos
        const erroresContraseña = Contraseña_valida(contraseña);
        errores = errores.concat(erroresContraseña);

        // Verificación en el servidor: Validar si el nombre de usuario ya está registrado
        if (
            nombres_usu_registrados.some(
                (n) => n.nombre_usuario === nombre_usuario,
            )
        ) {
            errores.push("El nombre de usuario ya está registrado.");
        }

        // Verificación en el servidor: Validar si el número de teléfono tiene 9 dígitos
        if (!numero_telf_valido(telefono_usu)) {
            errores.push(
                "El número de teléfono debe tener exactamente 9 dígitos.",
            );
        }

        // Si no hay errores, inserta el nuevo usuario en la base de datos
        if (errores.length === 0) {
            const tipo_usu = tipousuariotexto === "true";
            const fecha_registro = fecha_actual;

            const img_usu =
                "https://imagedelivery.net/DX6aCRCKOB_y-l4MZVDT9w/67b1b1e8-6955-4edb-5238-7578e8090f00/public"; // Imagen predeterminada del usuario

            // Inserta los datos del usuario en la base de datos
            await db.insert(Usuario).values({
                nombre_usuario,
                nombre,
                apellidos,
                contraseña,
                correo_electronico,
                direccion_usu,
                telefono_usu,
                tipo_usu,
                img_usu,
                fecha_nacimiento,
                fecha_registro,
            });
        }
    }
}
---

<Layout title="Registro">
    <div class="max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md">
        <h2 class="text-2xl font-bold mb-6 text-center">Registro de Usuario</h2>

        <!-- Listado de errores -->
        <ul id="errores" class="text-red-500 mb-4 list-disc pl-5 hidden"></ul>

        <form method="POST" class="flex flex-col space-y-4" id="registro-form">
            <!-- Campos del formulario -->
            <label class="block">
                <span class="text-gray-700">Nombre de Usuario:</span>
                <input
                    type="text"
                    name="nombre_usuario"
                    id="nombre_usuario"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Nombre:</span>
                <input
                    type="text"
                    name="nombre"
                    id="nombre"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Apellidos:</span>
                <input
                    type="text"
                    name="apellidos"
                    id="apellidos"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Contraseña:</span>
                <input
                    type="password"
                    name="contraseña"
                    id="contraseña"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Correo Electrónico:</span>
                <input
                    type="email"
                    name="correo_electronico"
                    id="correo_electronico"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Dirección:</span>
                <input
                    type="text"
                    name="direccion_usu"
                    id="direccion_usu"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Teléfono:</span>
                <input
                    type="text"
                    name="telefono_usu"
                    id="telefono_usu"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Fecha de Nacimiento:</span>
                <input
                    type="date"
                    name="fecha_nacimiento"
                    id="fecha_nacimiento"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                />
            </label>
            <label class="block">
                <span class="text-gray-700">Tipo de Usuario:</span>
                <select
                    name="tipo_usu"
                    id="tipo_usu"
                    required
                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                >
                    <option value="true">Administrador</option>
                    <option value="false">Usuario Normal</option>
                </select>
            </label>

            <button
                type="submit"
                class="w-full bg-indigo-500 text-white py-2 px-4 rounded-md shadow-sm hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
                Registrar
            </button>
        </form>
    </div>
    <!-- Inyectar los datos directamente en el script -->
    <script
        set:html={`
        const correos_registrados = ${JSON.stringify(correos_registrados.map((c) => c.correo_electronico))};
        const nombresusu_registrados = ${JSON.stringify(nombres_usu_registrados.map((n) => n.nombre_usuario))}
    `}
    />
</Layout>

<script>
    import {
        mayor_16,
        Contraseña_valida,
        numero_telf_valido,
    } from "../scripts/VerificacionDatos/VerificacionDatos.js";

    document.addEventListener("DOMContentLoaded", function () {
        const registroForm = document.getElementById("registro-form");
        const lista_errores = document.getElementById("errores");

        if (registroForm) {
            registroForm.addEventListener("submit", function (event) {
                const errores = [];
                const texto_correo = document.getElementById(
                    "correo_electronico",
                ) as HTMLInputElement;
                const correo_electronico = texto_correo?.value || "";
                const texto_nombreusu = document.getElementById(
                    "nombre_usuario",
                ) as HTMLInputElement;
                const nombre_usu = texto_nombreusu?.value || "";
                const texto_contraseña = document.getElementById(
                    "contraseña",
                ) as HTMLInputElement;
                const contraseña_usu = texto_contraseña?.value || "";
                const texto_telefono = document.getElementById(
                    "telefono_usu",
                ) as HTMLInputElement;
                const telefono = texto_telefono?.value || "";
                const texto_fechaNacimiento = document.getElementById(
                    "fecha_nacimiento",
                ) as HTMLInputElement;
                const fecha_nac = texto_fechaNacimiento?.value || "";

                // Verificación en el cliente: Validar si el correo electrónico ya está registrado
                if (correos_registrados.includes(correo_electronico)) {
                    errores.push("El correo electrónico ya está registrado.");
                }

                // Verificación en el cliente: Validar si el nombre de usuario ya está registrado
                if (nombresusu_registrados.includes(nombre_usu)) {
                    errores.push("El nombre de usuario ya está registrado.");
                }

                // Verificación en el cliente: Validar si la contraseña es válida
                const erroresContraseña = Contraseña_valida(contraseña_usu);
                errores.push(...erroresContraseña);

                // Verificación en el cliente: Validar si el número de teléfono es válido
                if (!numero_telf_valido(telefono)) {
                    errores.push(
                        "El número de teléfono debe tener exactamente 9 dígitos.",
                    );
                }

                // Verificación en el cliente: Validar si el usuario es mayor de 16 años
                if (fecha_nac) {
                    const fecha_nacimiento = new Date(fecha_nac);
                    if (!mayor_16(fecha_nacimiento)) {
                        errores.push(
                            "Debes tener 16 años o más para poder registrarte.",
                        );
                    }
                } else {
                    errores.push("La fecha de nacimiento es obligatoria.");
                }

                // Mostrar errores si existen
                if (errores.length > 0) {
                    event.preventDefault();
                    if (lista_errores) {
                        lista_errores.innerHTML = errores
                            .map((error) => `<li>${error}</li>`)
                            .join("");
                        lista_errores.classList.remove("hidden");
                    }
                } else {
                    if (lista_errores) {
                        lista_errores.classList.add("hidden");
                    }
                }
            });
        }
    });
</script>
